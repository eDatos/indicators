<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:beans="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"    
        xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

    <bean id="propertyPlaceholderConfigurer" class="org.siemac.metamac.core.common.conf.ConfigurationServicePropertyPlaceholderConfigurer">
        <property name="configurationService">
            <ref bean="configurationService" />
        </property>
    </bean>
    
    <!-- Configure Externalized Logging configuration file -->
	<bean id="loggingSetup" class="org.siemac.metamac.core.common.logging.LoggingSetup">
		<property name="logConfigurationFile" value="${environment.indicators.data}/conf/dynamic/logback-indicators-web.xml"/>
	</bean>

    <!-- Scans within the base package of the application for @Components to configure as beans -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:i18n/messages" />
    </bean>

    <!-- Sets up standard HandlerMapping and HanderAdapter for use with annotations.
         Allows customization of various MVC-related aspects like binding and validation. -->
    <mvc:annotation-driven conversion-service="conversionService" />
    
    <!-- Converters -->
    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
	</bean>
    
    <!-- Configurer that sets up a shared FreeMarker Configuration for FreeMarker views -->
    <bean id="freemarkerConfigurer"  class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="defaultEncoding" value="UTF-8" />
        <property name="templateLoaderPaths">
            <list>
                <value>/WEB-INF/views</value>
                <value>/theme/js</value>
            </list>
        </property>
      </bean>

    <!-- Simple ViewResolver for FreeMarker, appending ".ftl" to logical view names. -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver" >
          <property name="cache" value="true" />
          <property name="prefix" value="" />
          <property name="suffix" value=".ftl" />
          <property name="contentType" value="text/html; charset=UTF-8" />
          <property name="viewClass" value="es.gobcan.istac.indicators.web.diffusion.view.FreeMarkerHelperView" />
          <property name="exposeSpringMacroHelpers" value="true" />
          <property name="exposeRequestAttributes" value="true" />
          <property name="exposeSessionAttributes" value="true" />
          <property name="allowSessionOverride" value="true" />
          <property name="allowRequestOverride" value="true" />      
          <property name="requestContextAttribute" value="rc"/>                        
    </bean>

	<!-- Configure the multipart resolver -->
<!--     <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> -->
        <!-- one of the properties available; the maximum file size in bytes -->
<!--         <property name="maxUploadSize" value="100000"/> -->
<!--     </bean> -->
    
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
	</bean>
	
	<!--
    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
              <property name="paramName" value="language"></property>
        </bean>
	</mvc:interceptors> 
    -->

    <!-- Imports user-defined @Controller beans that process client requests -->
    <import resource="applicationContext-web-controllers.xml" />
    <import resource="applicationContext-web-resources.xml" />

    <!-- Rest API -->
    <import resource="classpath:/spring/indicators-rest-external-applicationContext.xml" />
    <import resource="application-cache.xml" />


</beans>